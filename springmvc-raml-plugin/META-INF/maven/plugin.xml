<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.4 on 2017-12-04 -->

<plugin>
  <name>Spring MVC to RAML Synchronizer Maven Plugin</name>
  <description>Maven Plugin offering RAML verification and generation functions</description>
  <groupId>com.github.JavaChr1s</groupId>
  <artifactId>springmvc-raml-plugin</artifactId>
  <version>0.10.12a</version>
  <goalPrefix>springmvc-raml</goalPrefix>
  <isolatedRealm>false</isolatedRealm>
  <inheritedByDefault>true</inheritedByDefault>
  <mojos>
    <mojo>
      <goal>generate-springmvc-api-docs</goal>
      <description>Maven Plugin MOJO specific to Spring MVC Projects.</description>
      <requiresDependencyResolution>compile+runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>com.phoenixnap.oss.ramlapisync.plugin.SpringMvcRamlApiSyncMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <since>0.0.1</since>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>createPathIfMissing</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>false</editable>
          <description>If this is set to true, we will create the RAML file and directories if they don&apos;t exist</description>
        </parameter>
        <parameter>
          <name>defaultMediaType</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>false</editable>
          <description>Default media Type to be used in returns/consumes where these are not specified in the code</description>
        </parameter>
        <parameter>
          <name>dependencyPackagesList</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>false</editable>
          <description>Filter that allows the plugin to scan packages in dependencies and add them to RAML scans</description>
        </parameter>
        <parameter>
          <name>documentationSuffix</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>false</editable>
          <description>The file extension that will be used to determine files that should be included as documents and linked to the
generated RAML file</description>
        </parameter>
        <parameter>
          <name>ignoredList</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>false</editable>
          <description>Filter that allows the plugin to ignore packages or classes in the list.</description>
        </parameter>
        <parameter>
          <name>includeGlobalMediaType</name>
          <type>boolean</type>
          <required>false</required>
          <editable>false</editable>
          <description>If this is set to true, we will append the default media type to the global raml mediaType property</description>
        </parameter>
        <parameter>
          <name>javaDocPath</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>false</editable>
          <description>Path to the raml document to be verified</description>
        </parameter>
        <parameter>
          <name>outputRamlFilePath</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>false</editable>
          <description>Relative file path where the RAML document will be saved to</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>Maven project - required for class scanning</description>
        </parameter>
        <parameter>
          <name>removeOldOutput</name>
          <type>boolean</type>
          <required>false</required>
          <editable>false</editable>
          <description>If this is set to true, we will empty the output directory before generation occurs</description>
        </parameter>
        <parameter>
          <name>restBasePath</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>false</editable>
          <description>Base URL relative to the generated RAML file for the APIs to be accessed at runtime</description>
        </parameter>
        <parameter>
          <name>restrictOnMediaType</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>false</editable>
          <description>IF this is set to true, we will only parse methods that consume, produce or accept the requested defaultMediaType</description>
        </parameter>
        <parameter>
          <name>version</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>false</editable>
          <description>Version of the API being represented in this generation</description>
        </parameter>
      </parameters>
      <configuration>
        <createPathIfMissing implementation="java.lang.Boolean" default-value="false"/>
        <defaultMediaType implementation="java.lang.String" default-value="application/json"/>
        <documentationSuffix implementation="java.lang.String" default-value="-doc.md"/>
        <includeGlobalMediaType implementation="boolean" default-value="false"/>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <removeOldOutput implementation="boolean" default-value="false"/>
        <restrictOnMediaType implementation="java.lang.Boolean" default-value="false"/>
        <version implementation="java.lang.String" default-value="1"/>
      </configuration>
    </mojo>
    <mojo>
      <goal>generate-springmvc-endpoints</goal>
      <description>Maven Plugin MOJO specific to Generation of Spring MVC Endpoints from RAML documents.</description>
      <requiresDependencyResolution>compile+runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>false</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>com.phoenixnap.oss.ramlapisync.plugin.SpringMvcEndpointGeneratorMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <since>0.2.1</since>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>addTimestampFolder</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>false</editable>
          <description>IF this is set to true, we will only parse methods that consume, produce or accept the
requested defaultMediaType</description>
        </parameter>
        <parameter>
          <name>basePackage</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>false</editable>
          <description>Java package to be applied to the generated files</description>
        </parameter>
        <parameter>
          <name>baseUri</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>false</editable>
          <description>The explicit base path under which the rest endpoints should be located.
If overrules the baseUri setting in the raml spec.</description>
        </parameter>
        <parameter>
          <name>descriptor</name>
          <type>org.apache.maven.plugin.descriptor.PluginDescriptor</type>
          <required>false</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>generateUnreferencedSchemas</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>false</editable>
          <description>A boolean indicating whether the POJOs for unreferenced schemas defined in the RAML file
should be generated. By default, such schemas are not generated.</description>
        </parameter>
        <parameter>
          <name>generationConfig</name>
          <type>com.phoenixnap.oss.ramlapisync.plugin.JsonShema2PojoGenerationConfig</type>
          <required>false</required>
          <editable>false</editable>
          <description>Configuration passed to JSONSchema2Pojo for generation of pojos.</description>
        </parameter>
        <parameter>
          <name>injectHttpHeadersParameter</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>false</editable>
          <description>If set to true, we will generate methods with HttpHeaders as a parameter</description>
        </parameter>
        <parameter>
          <name>outputRelativePath</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>false</editable>
          <description>Relative file path where the Java files will be saved to</description>
        </parameter>
        <parameter>
          <name>pomPath</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>false</editable>
          <description>Path to the pom  document to be verified</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>Maven project - required for project info</description>
        </parameter>
        <parameter>
          <name>ramlPath</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>false</editable>
          <description>Path to the raml document to be verified</description>
        </parameter>
        <parameter>
          <name>resourceDepthInClassNames</name>
          <type>java.lang.Integer</type>
          <required>false</required>
          <editable>false</editable>
          <description>How many levels of uri will be included in generated class names. Default
is 1 which means that only current resource will be in included in
controller/decorator names.</description>
        </parameter>
        <parameter>
          <name>resourceTopLevelInClassNames</name>
          <type>java.lang.Integer</type>
          <required>false</required>
          <editable>false</editable>
          <description>Top level of URI included in generated class names. Default is 0 which means
that all resources will be in included in controller/decorator names.</description>
        </parameter>
        <parameter>
          <name>reverseOrderInClassNames</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>false</editable>
          <description>Reverse order of resource path that will be included in generated class names. Default is false which means
that resources will be in included in controller/decorator names from left to right.</description>
        </parameter>
        <parameter>
          <name>rule</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>false</editable>
          <description>The full qualified name of the Rule that should be used for code generation.</description>
        </parameter>
        <parameter>
          <name>ruleConfiguration</name>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>false</editable>
          <description>Map of key/value configuration parameters that can be used to modify behaviour or certain
rules</description>
        </parameter>
        <parameter>
          <name>schemaLocation</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>false</editable>
          <description>The URI or relative path to the folder/network location containing JSON Schemas</description>
        </parameter>
        <parameter>
          <name>seperateMethodsByContentType</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>false</editable>
          <description>If set to true, we will generate seperate methods for different content types in the RAML</description>
        </parameter>
        <parameter>
          <name>useJackson1xCompatibility</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>false</editable>
          <description>If set to true, we will generate Jackson 1 annotations inside the model objects</description>
        </parameter>
      </parameters>
      <configuration>
        <addTimestampFolder implementation="java.lang.Boolean" default-value="false"/>
        <basePackage implementation="java.lang.String" default-value="">${basePackage}</basePackage>
        <descriptor implementation="org.apache.maven.plugin.descriptor.PluginDescriptor" default-value="${plugin}"/>
        <generateUnreferencedSchemas implementation="java.lang.Boolean" default-value="false"/>
        <injectHttpHeadersParameter implementation="java.lang.Boolean" default-value="false"/>
        <outputRelativePath implementation="java.lang.String" default-value="">${outputRelativePath}</outputRelativePath>
        <pomPath implementation="java.lang.String" default-value="NA">${pomPath}</pomPath>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <ramlPath implementation="java.lang.String" default-value="">${ramlPath}</ramlPath>
        <resourceDepthInClassNames implementation="java.lang.Integer" default-value="1"/>
        <resourceTopLevelInClassNames implementation="java.lang.Integer" default-value="0"/>
        <reverseOrderInClassNames implementation="java.lang.Boolean" default-value="false"/>
        <rule implementation="java.lang.String" default-value="com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerStubRule"/>
        <seperateMethodsByContentType implementation="java.lang.Boolean" default-value="false"/>
        <useJackson1xCompatibility implementation="java.lang.Boolean" default-value="false"/>
      </configuration>
    </mojo>
    <mojo>
      <goal>help</goal>
      <description>Display help information on springmvc-raml-plugin.&lt;br&gt;
Call &lt;code&gt;mvn springmvc-raml:help -Ddetail=true -Dgoal=&amp;lt;goal-name&amp;gt;&lt;/code&gt; to display parameter details.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>false</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>com.phoenixnap.oss.ramlapisync.plugin.HelpMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>detail</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If &lt;code&gt;true&lt;/code&gt;, display all settable properties for each goal.</description>
        </parameter>
        <parameter>
          <name>goal</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The name of the goal for which to show help. If unspecified, all goals will be displayed.</description>
        </parameter>
        <parameter>
          <name>indentSize</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The number of spaces per indentation level, should be positive.</description>
        </parameter>
        <parameter>
          <name>lineLength</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The maximum length of a display line, should be positive.</description>
        </parameter>
      </parameters>
      <configuration>
        <detail implementation="boolean" default-value="false">${detail}</detail>
        <goal implementation="java.lang.String">${goal}</goal>
        <indentSize implementation="int" default-value="2">${indentSize}</indentSize>
        <lineLength implementation="int" default-value="80">${lineLength}</lineLength>
      </configuration>
    </mojo>
    <mojo>
      <goal>verify-springmvc-api-docs</goal>
      <description>Maven Plugin MOJO specific to verification of RAML from implementations in Spring MVC Projects.</description>
      <requiresDependencyResolution>compile+runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>com.phoenixnap.oss.ramlapisync.plugin.SpringMvcRamlVerifierMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <since>0.0.1</since>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>breakBuildOnWarnings</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>false</editable>
          <description>Flag that will enable or disable braking of the build if Warnings are found</description>
        </parameter>
        <parameter>
          <name>checkForActionContentType</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>false</editable>
          <description>Flag that will enable or disable Checks for compatibility in the type of Actions/Verbs</description>
        </parameter>
        <parameter>
          <name>checkForActionExistence</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>false</editable>
          <description>Flag that will enable or disable Checks for existence of Actions/Verbs</description>
        </parameter>
        <parameter>
          <name>checkForDefinitionOf404ResponseInGetRequest</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>false</editable>
          <description>Flag that will enable or disable checks for 404 responses get requests</description>
        </parameter>
        <parameter>
          <name>checkForDefinitionOf40xResponseInSecuredResource</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>false</editable>
          <description>Flag that will enable or disable checks for 401 and 403 responses for secured resources</description>
        </parameter>
        <parameter>
          <name>checkForDefinitionOfErrorCodes</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>false</editable>
          <description>Flag that will enable or disable checks for 400 and 500 error codes in certain verbs</description>
        </parameter>
        <parameter>
          <name>checkForPluralisedResourceNames</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>false</editable>
          <description>Flag that will enable or disable checks for plural resources names</description>
        </parameter>
        <parameter>
          <name>checkForQueryParameterExistence</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>false</editable>
          <description>that will enable or disable checks for existence of query parameters</description>
        </parameter>
        <parameter>
          <name>checkForResourceExistence</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>false</editable>
          <description>Flag that will enable or disable Checks for existence of Resources</description>
        </parameter>
        <parameter>
          <name>checkForResponseBodySchema</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>false</editable>
          <description>Flag that will enable or disable checks for response body schema</description>
        </parameter>
        <parameter>
          <name>checkForSchemaInRequestBody</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>false</editable>
          <description>Comma seperated list of HTTP Methods to check for schemas being present in the request Body.</description>
        </parameter>
        <parameter>
          <name>checkForSchemaInSuccessfulResponseBody</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>false</editable>
          <description>Comma seperated list of HTTP Methods to check for schemas being present in the successful response Body.</description>
        </parameter>
        <parameter>
          <name>checkForSpecialCharactersInResourceNames</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>false</editable>
          <description>Flag that will enable or disable checks for special characters in URLs</description>
        </parameter>
        <parameter>
          <name>checkRamlAgainstImplementation</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>false</editable>
          <description>Flag that will enable or disable checking of the RAML file against the Server Implementation. If this is set to false it will override other check flags</description>
        </parameter>
        <parameter>
          <name>defaultMediaType</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>false</editable>
          <description>Default media Type to be used in returns/consumes where these are not specified in the code</description>
        </parameter>
        <parameter>
          <name>dependencyPackagesList</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>false</editable>
          <description>Filter that allows the plugin to scan packages in dependencies and add them to RAML scans</description>
        </parameter>
        <parameter>
          <name>documentationSuffix</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>false</editable>
          <description>The file extension that will be used to determine files that should be included as documents and linked to the
generated RAML file</description>
        </parameter>
        <parameter>
          <name>ignoredList</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>false</editable>
          <description>Filter that allows the plugin to ignore packages or classes in the list.</description>
        </parameter>
        <parameter>
          <name>javaDocPath</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>false</editable>
          <description>Path to the raml document to be verified</description>
        </parameter>
        <parameter>
          <name>logErrors</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>false</editable>
          <description>Flag that will enable or disable logging of error level Issues to standard out if found</description>
        </parameter>
        <parameter>
          <name>logWarnings</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>false</editable>
          <description>Flag that will enable or disable logging of warning level issues to standard out if found</description>
        </parameter>
        <parameter>
          <name>performStyleChecks</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>false</editable>
          <description>Flag that will enable or disable Style Checking of the RAML file. If this is set to false it will override other style check flags</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>Maven project - required for class scanning</description>
        </parameter>
        <parameter>
          <name>ramlToVerifyPath</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>false</editable>
          <description>Path to the raml document to be verified</description>
        </parameter>
        <parameter>
          <name>uriPrefixToIgnore</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>false</editable>
          <description>A Portion of the URL of the implemented RAML that will be ignored when verifying</description>
        </parameter>
        <parameter>
          <name>version</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>false</editable>
          <description>Version of the API being represented in this generation</description>
        </parameter>
      </parameters>
      <configuration>
        <breakBuildOnWarnings implementation="java.lang.Boolean" default-value="false"/>
        <checkForActionContentType implementation="java.lang.Boolean" default-value="true"/>
        <checkForActionExistence implementation="java.lang.Boolean" default-value="true"/>
        <checkForDefinitionOf404ResponseInGetRequest implementation="java.lang.Boolean" default-value="false"/>
        <checkForDefinitionOf40xResponseInSecuredResource implementation="java.lang.Boolean" default-value="true"/>
        <checkForDefinitionOfErrorCodes implementation="java.lang.Boolean" default-value="false"/>
        <checkForPluralisedResourceNames implementation="java.lang.Boolean" default-value="true"/>
        <checkForQueryParameterExistence implementation="java.lang.Boolean" default-value="true"/>
        <checkForResourceExistence implementation="java.lang.Boolean" default-value="true"/>
        <checkForResponseBodySchema implementation="java.lang.Boolean" default-value="false"/>
        <checkForSpecialCharactersInResourceNames implementation="java.lang.Boolean" default-value="true"/>
        <checkRamlAgainstImplementation implementation="java.lang.Boolean" default-value="true"/>
        <defaultMediaType implementation="java.lang.String" default-value="application/json"/>
        <documentationSuffix implementation="java.lang.String" default-value="-doc.md"/>
        <logErrors implementation="java.lang.Boolean" default-value="true"/>
        <logWarnings implementation="java.lang.Boolean" default-value="true"/>
        <performStyleChecks implementation="java.lang.Boolean" default-value="true"/>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <version implementation="java.lang.String" default-value="1"/>
      </configuration>
    </mojo>
  </mojos>
  <dependencies>
    <dependency>
      <groupId>com.phoenixnap.oss</groupId>
      <artifactId>springmvc-raml-parser</artifactId>
      <type>jar</type>
      <version>0.10.12</version>
    </dependency>
    <dependency>
      <groupId>com.phoenixnap.oss</groupId>
      <artifactId>springmvc-raml-annotations</artifactId>
      <type>jar</type>
      <version>0.10.12</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <type>jar</type>
      <version>4.3.5.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aop</artifactId>
      <type>jar</type>
      <version>4.3.5.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <type>jar</type>
      <version>4.3.5.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <type>jar</type>
      <version>4.3.5.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-expression</artifactId>
      <type>jar</type>
      <version>4.3.5.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <type>jar</type>
      <version>4.3.5.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <type>jar</type>
      <version>4.3.5.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-core</artifactId>
      <type>jar</type>
      <version>4.1.4.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>aopalliance</groupId>
      <artifactId>aopalliance</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <type>jar</type>
      <version>17.0</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <type>jar</type>
      <version>2.5</version>
    </dependency>
    <dependency>
      <groupId>com.github.javaparser</groupId>
      <artifactId>javaparser-core</artifactId>
      <type>jar</type>
      <version>2.4.0</version>
    </dependency>
    <dependency>
      <groupId>org.raml</groupId>
      <artifactId>raml-parser</artifactId>
      <type>jar</type>
      <version>0.8.17</version>
    </dependency>
    <dependency>
      <groupId>org.yaml</groupId>
      <artifactId>snakeyaml</artifactId>
      <type>jar</type>
      <version>1.17</version>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <type>jar</type>
      <version>2.6</version>
    </dependency>
    <dependency>
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils</artifactId>
      <type>jar</type>
      <version>1.9.3</version>
    </dependency>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <type>jar</type>
      <version>3.2.2</version>
    </dependency>
    <dependency>
      <groupId>com.github.fge</groupId>
      <artifactId>json-schema-validator</artifactId>
      <type>jar</type>
      <version>2.2.6</version>
    </dependency>
    <dependency>
      <groupId>com.googlecode.libphonenumber</groupId>
      <artifactId>libphonenumber</artifactId>
      <type>jar</type>
      <version>6.2</version>
    </dependency>
    <dependency>
      <groupId>com.github.fge</groupId>
      <artifactId>json-schema-core</artifactId>
      <type>jar</type>
      <version>1.2.5</version>
    </dependency>
    <dependency>
      <groupId>com.github.fge</groupId>
      <artifactId>uri-template</artifactId>
      <type>jar</type>
      <version>0.9</version>
    </dependency>
    <dependency>
      <groupId>com.github.fge</groupId>
      <artifactId>msg-simple</artifactId>
      <type>jar</type>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>com.github.fge</groupId>
      <artifactId>btf</artifactId>
      <type>jar</type>
      <version>1.2</version>
    </dependency>
    <dependency>
      <groupId>com.github.fge</groupId>
      <artifactId>jackson-coreutils</artifactId>
      <type>jar</type>
      <version>1.8</version>
    </dependency>
    <dependency>
      <groupId>org.mozilla</groupId>
      <artifactId>rhino</artifactId>
      <type>jar</type>
      <version>1.7R4</version>
    </dependency>
    <dependency>
      <groupId>javax.mail</groupId>
      <artifactId>mailapi</artifactId>
      <type>jar</type>
      <version>1.4.3</version>
    </dependency>
    <dependency>
      <groupId>javax.activation</groupId>
      <artifactId>activation</artifactId>
      <type>jar</type>
      <version>1.1.1</version>
    </dependency>
    <dependency>
      <groupId>net.sf.jopt-simple</groupId>
      <artifactId>jopt-simple</artifactId>
      <type>jar</type>
      <version>5.0.3</version>
    </dependency>
    <dependency>
      <groupId>com.googlecode.juniversalchardet</groupId>
      <artifactId>juniversalchardet</artifactId>
      <type>jar</type>
      <version>1.0.3</version>
    </dependency>
    <dependency>
      <groupId>org.raml</groupId>
      <artifactId>raml-parser-2</artifactId>
      <type>jar</type>
      <version>1.0.9</version>
    </dependency>
    <dependency>
      <groupId>org.raml</groupId>
      <artifactId>yagi</artifactId>
      <type>jar</type>
      <version>1.0.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.ws.xmlschema</groupId>
      <artifactId>xmlschema-core</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.reflections</groupId>
      <artifactId>reflections</artifactId>
      <type>jar</type>
      <version>0.9.10</version>
    </dependency>
    <dependency>
      <groupId>org.javassist</groupId>
      <artifactId>javassist</artifactId>
      <type>jar</type>
      <version>3.20.0-GA</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>annotations</artifactId>
      <type>jar</type>
      <version>2.0.3</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <type>jar</type>
      <version>2.8.5</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <type>jar</type>
      <version>2.8.5</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-jsonSchema</artifactId>
      <type>jar</type>
      <version>2.8.6</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <type>jar</type>
      <version>2.8.5</version>
    </dependency>
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <type>jar</type>
      <version>1.1.0.Final</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
      <type>jar</type>
      <version>2.8.6</version>
    </dependency>
    <dependency>
      <groupId>org.jsonschema2pojo</groupId>
      <artifactId>jsonschema2pojo-core</artifactId>
      <type>jar</type>
      <version>0.4.31</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.javaparser</groupId>
      <artifactId>javaparser</artifactId>
      <type>jar</type>
      <version>1.0.11</version>
    </dependency>
    <dependency>
      <groupId>com.google.android</groupId>
      <artifactId>android</artifactId>
      <type>jar</type>
      <version>4.1.1.4</version>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <type>jar</type>
      <version>1.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <type>jar</type>
      <version>4.5.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
      <type>jar</type>
      <version>4.4.5</version>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <type>jar</type>
      <version>1.10</version>
    </dependency>
    <dependency>
      <groupId>org.khronos</groupId>
      <artifactId>opengl-api</artifactId>
      <type>jar</type>
      <version>gl1.1-android-2.1_r1</version>
    </dependency>
    <dependency>
      <groupId>xerces</groupId>
      <artifactId>xmlParserAPIs</artifactId>
      <type>jar</type>
      <version>2.6.2</version>
    </dependency>
    <dependency>
      <groupId>xpp3</groupId>
      <artifactId>xpp3</artifactId>
      <type>jar</type>
      <version>1.1.4c</version>
    </dependency>
    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <type>jar</type>
      <version>20140107</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <type>jar</type>
      <version>2.7</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
      <type>jar</type>
      <version>3.0.1</version>
    </dependency>
    <dependency>
      <groupId>com.squareup.moshi</groupId>
      <artifactId>moshi</artifactId>
      <type>jar</type>
      <version>1.1.0</version>
    </dependency>
    <dependency>
      <groupId>com.squareup.okio</groupId>
      <artifactId>okio</artifactId>
      <type>jar</type>
      <version>1.6.0</version>
    </dependency>
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <type>jar</type>
      <version>2.9.6</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-mapper-asl</artifactId>
      <type>jar</type>
      <version>1.9.13</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-core-asl</artifactId>
      <type>jar</type>
      <version>1.9.13</version>
    </dependency>
    <dependency>
      <groupId>com.sun.codemodel</groupId>
      <artifactId>codemodel</artifactId>
      <type>jar</type>
      <version>2.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <type>jar</type>
      <version>3.3.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <type>jar</type>
      <version>3.3.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings</artifactId>
      <type>jar</type>
      <version>3.3.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings-builder</artifactId>
      <type>jar</type>
      <version>3.3.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-builder-support</artifactId>
      <type>jar</type>
      <version>3.3.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-repository-metadata</artifactId>
      <type>jar</type>
      <version>3.3.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <type>jar</type>
      <version>3.3.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model-builder</artifactId>
      <type>jar</type>
      <version>3.3.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-aether-provider</artifactId>
      <type>jar</type>
      <version>3.3.9</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.aether</groupId>
      <artifactId>aether-spi</artifactId>
      <type>jar</type>
      <version>1.0.2.v20150114</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.aether</groupId>
      <artifactId>aether-impl</artifactId>
      <type>jar</type>
      <version>1.0.2.v20150114</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.aether</groupId>
      <artifactId>aether-api</artifactId>
      <type>jar</type>
      <version>1.0.2.v20150114</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.aether</groupId>
      <artifactId>aether-util</artifactId>
      <type>jar</type>
      <version>1.0.2.v20150114</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.sisu</groupId>
      <artifactId>org.eclipse.sisu.plexus</artifactId>
      <type>jar</type>
      <version>0.3.2</version>
    </dependency>
    <dependency>
      <groupId>javax.enterprise</groupId>
      <artifactId>cdi-api</artifactId>
      <type>jar</type>
      <version>1.2</version>
    </dependency>
    <dependency>
      <groupId>javax.el</groupId>
      <artifactId>javax.el-api</artifactId>
      <type>jar</type>
      <version>2.2.5</version>
    </dependency>
    <dependency>
      <groupId>javax.interceptor</groupId>
      <artifactId>javax.interceptor-api</artifactId>
      <type>jar</type>
      <version>1.2</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.sisu</groupId>
      <artifactId>org.eclipse.sisu.inject</artifactId>
      <type>jar</type>
      <version>0.3.2</version>
    </dependency>
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
      <type>jar</type>
      <version>4.0</version>
    </dependency>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <type>jar</type>
      <version>1</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-interpolation</artifactId>
      <type>jar</type>
      <version>1.21</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <type>jar</type>
      <version>3.0.22</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-classworlds</artifactId>
      <type>jar</type>
      <version>2.5.2</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-component-annotations</artifactId>
      <type>jar</type>
      <version>1.6</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.plexus</groupId>
      <artifactId>plexus-sec-dispatcher</artifactId>
      <type>jar</type>
      <version>1.3</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.plexus</groupId>
      <artifactId>plexus-cipher</artifactId>
      <type>jar</type>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <type>jar</type>
      <version>3.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <type>jar</type>
      <version>3.3.9</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <type>jar</type>
      <version>1.7.22</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <type>jar</type>
      <version>1.7.22</version>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <type>jar</type>
      <version>1.2.17</version>
    </dependency>
  </dependencies>
</plugin>